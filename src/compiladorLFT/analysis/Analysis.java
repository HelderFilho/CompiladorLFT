/* This file was generated by SableCC (http://www.sablecc.org/). */

package compiladorLFT.analysis;

import compiladorLFT.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseTDoisPontosFinais(TDoisPontosFinais node);
    void caseTFimAlgoritmo(TFimAlgoritmo node);
    void caseTFimPara(TFimPara node);
    void caseTFaca(TFaca node);
    void caseTPara(TPara node);
    void caseTInicio(TInicio node);
    void caseTLeia(TLeia node);
    void caseTLogico(TLogico node);
    void caseTNao(TNao node);
    void caseTOu(TOu node);
    void caseTInteiro(TInteiro node);
    void caseTProcedimento(TProcedimento node);
    void caseTPrograma(TPrograma node);
    void caseTReal(TReal node);
    void caseTRepita(TRepita node);
    void caseTRetorne(TRetorne node);
    void caseTSe(TSe node);
    void caseTSenao(TSenao node);
    void caseTVariaveis(TVariaveis node);
    void caseTVerdadeiro(TVerdadeiro node);
    void caseTVetor(TVetor node);
    void caseTXou(TXou node);
    void caseTAleatorio(TAleatorio node);
    void caseTAlgoritmo(TAlgoritmo node);
    void caseTArquivo(TArquivo node);
    void caseTAspasDuplas(TAspasDuplas node);
    void caseTAspasSimples(TAspasSimples node);
    void caseTAte(TAte node);
    void caseTCaracter(TCaracter node);
    void caseTCaso(TCaso node);
    void caseTColcheteD(TColcheteD node);
    void caseTColcheteE(TColcheteE node);
    void caseTDe(TDe node);
    void caseTDiferente(TDiferente node);
    void caseTDividido(TDividido node);
    void caseTDoisPontos(TDoisPontos node);
    void caseTE(TE node);
    void caseTEnquanto(TEnquanto node);
    void caseTEntao(TEntao node);
    void caseTEscolha(TEscolha node);
    void caseTEscreva(TEscreva node);
    void caseTEscreval(TEscreval node);
    void caseTFalso(TFalso node);
    void caseTFim(TFim node);
    void caseTFimEnquanto(TFimEnquanto node);
    void caseTFimFuncao(TFimFuncao node);
    void caseTFimProcedimento(TFimProcedimento node);
    void caseTFimRepita(TFimRepita node);
    void caseTFimSe(TFimSe node);
    void caseTFimVar(TFimVar node);
    void caseTFuncao(TFuncao node);
    void caseTIdentificador(TIdentificador node);
    void caseTIgual(TIgual node);
    void caseTNumero(TNumero node);
    void caseTMaior(TMaior node);
    void caseTMaiorIgual(TMaiorIgual node);
    void caseTMais(TMais node);
    void caseTMenor(TMenor node);
    void caseTMenorIgual(TMenorIgual node);
    void caseTMenos(TMenos node);
    void caseTParenteseD(TParenteseD node);
    void caseTParenteseE(TParenteseE node);
    void caseTPausa(TPausa node);
    void caseTPontoFinal(TPontoFinal node);
    void caseTPontoVirgula(TPontoVirgula node);
    void caseTRecebe(TRecebe node);
    void caseTResto(TResto node);
    void caseTVazio(TVazio node);
    void caseTVezes(TVezes node);
    void caseTVirgula(TVirgula node);
    void caseTComentarioSimples(TComentarioSimples node);
    void caseTComment(TComment node);
    void caseTCommentEnd(TCommentEnd node);
    void caseTCommentBody(TCommentBody node);
    void caseTStar(TStar node);
    void caseTSlash(TSlash node);
    void caseTFimTexto(TFimTexto node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
