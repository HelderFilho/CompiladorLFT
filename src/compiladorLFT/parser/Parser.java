/* This file was generated by SableCC (http://www.sablecc.org/). */

package compiladorLFT.parser;

import compiladorLFT.lexer.*;
import compiladorLFT.node.*;
import compiladorLFT.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList<Object> nodeList;

    private final Lexer lexer;
    private final ListIterator<Object> stack = new LinkedList<Object>().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    @SuppressWarnings({"unchecked","unused"})
    private void push(int numstate, ArrayList<Object> listNode) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            // int middle = (low + high) / 2;
            int middle = (low + high) >>> 1;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList<Object> pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList<Object> list = new ArrayList<Object>();
		        list.add(this.lexer.next());
                        push(this.action[1], list);
                    }
		    break;
                case REDUCE:
                    {
                        int reduction = this.action[1];
                        if(reduction < 500) reduce_0(reduction);
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PProgramas node1 = (PProgramas) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }

    private void reduce_0(int reduction) throws IOException, LexerException, ParserException
    {
        switch(reduction)
        {
            case 0: /* reduce AAtipodeclaracao11Programas */
            {
                ArrayList<Object> list = new0();
                push(goTo(0), list);
            }
            break;
            case 1: /* reduce AAtipodeclaracao21Programas */
            {
                ArrayList<Object> list = new1();
                push(goTo(0), list);
            }
            break;
            case 2: /* reduce AConst1Programas */
            {
                ArrayList<Object> list = new2();
                push(goTo(0), list);
            }
            break;
            case 3: /* reduce AVarRepeat */
            {
                ArrayList<Object> list = new3();
                push(goTo(1), list);
            }
            break;
            case 4: /* reduce ATesteComando */
            {
                ArrayList<Object> list = new4();
                push(goTo(2), list);
            }
            break;
            case 5: /* reduce ALeiaComando */
            {
                ArrayList<Object> list = new5();
                push(goTo(2), list);
            }
            break;
            case 6: /* reduce AEscrevaComando */
            {
                ArrayList<Object> list = new6();
                push(goTo(2), list);
            }
            break;
            case 7: /* reduce AAsecomando1Comando */
            {
                ArrayList<Object> list = new7();
                push(goTo(2), list);
            }
            break;
            case 8: /* reduce AAsecomando2Comando */
            {
                ArrayList<Object> list = new8();
                push(goTo(2), list);
            }
            break;
            case 9: /* reduce AAsecomando3Comando */
            {
                ArrayList<Object> list = new9();
                push(goTo(2), list);
            }
            break;
            case 10: /* reduce AAsecomando4Comando */
            {
                ArrayList<Object> list = new10();
                push(goTo(2), list);
            }
            break;
            case 11: /* reduce AAvalieComando */
            {
                ArrayList<Object> list = new11();
                push(goTo(2), list);
            }
            break;
            case 12: /* reduce AAenquantocomando1Comando */
            {
                ArrayList<Object> list = new12();
                push(goTo(2), list);
            }
            break;
            case 13: /* reduce AAenquantocomando2Comando */
            {
                ArrayList<Object> list = new13();
                push(goTo(2), list);
            }
            break;
            case 14: /* reduce AArepitacomando1Comando */
            {
                ArrayList<Object> list = new14();
                push(goTo(2), list);
            }
            break;
            case 15: /* reduce AArepitacomando2Comando */
            {
                ArrayList<Object> list = new15();
                push(goTo(2), list);
            }
            break;
            case 16: /* reduce AAparacomando1Comando */
            {
                ArrayList<Object> list = new16();
                push(goTo(2), list);
            }
            break;
            case 17: /* reduce AAparacomando2Comando */
            {
                ArrayList<Object> list = new17();
                push(goTo(2), list);
            }
            break;
            case 18: /* reduce AAparapassocomando1Comando */
            {
                ArrayList<Object> list = new18();
                push(goTo(2), list);
            }
            break;
            case 19: /* reduce AAparapassocomando2Comando */
            {
                ArrayList<Object> list = new19();
                push(goTo(2), list);
            }
            break;
            case 20: /* reduce AAsenaocomando1SenaoComando */
            {
                ArrayList<Object> list = new20();
                push(goTo(3), list);
            }
            break;
            case 21: /* reduce AAsenaocomando2SenaoComando */
            {
                ArrayList<Object> list = new21();
                push(goTo(3), list);
            }
            break;
            case 22: /* reduce AComandoRepeat */
            {
                ArrayList<Object> list = new22();
                push(goTo(4), list);
            }
            break;
            case 23: /* reduce AValors */
            {
                ArrayList<Object> list = new23();
                push(goTo(5), list);
            }
            break;
            case 24: /* reduce AExps */
            {
                ArrayList<Object> list = new24();
                push(goTo(6), list);
            }
            break;
            case 25: /* reduce AComandos */
            {
                ArrayList<Object> list = new25();
                push(goTo(7), list);
            }
            break;
            case 26: /* reduce AInteiroTipo */
            {
                ArrayList<Object> list = new26();
                push(goTo(8), list);
            }
            break;
            case 27: /* reduce ARealTipo */
            {
                ArrayList<Object> list = new27();
                push(goTo(8), list);
            }
            break;
            case 28: /* reduce ACaracterTipo */
            {
                ArrayList<Object> list = new28();
                push(goTo(8), list);
            }
            break;
            case 29: /* reduce AIdentificadorVar */
            {
                ArrayList<Object> list = new29();
                push(goTo(9), list);
            }
            break;
            case 30: /* reduce AStringVar */
            {
                ArrayList<Object> list = new30();
                push(goTo(9), list);
            }
            break;
            case 31: /* reduce AIdentificadors */
            {
                ArrayList<Object> list = new31();
                push(goTo(10), list);
            }
            break;
            case 32: /* reduce AStringValor */
            {
                ArrayList<Object> list = new32();
                push(goTo(11), list);
            }
            break;
            case 33: /* reduce ANumeroIntValor */
            {
                ArrayList<Object> list = new33();
                push(goTo(11), list);
            }
            break;
            case 34: /* reduce ANumeroRealValor */
            {
                ArrayList<Object> list = new34();
                push(goTo(11), list);
            }
            break;
            case 35: /* reduce AExp */
            {
                ArrayList<Object> list = new35();
                push(goTo(12), list);
            }
            break;
            case 36: /* reduce AExpLogica */
            {
                ArrayList<Object> list = new36();
                push(goTo(13), list);
            }
            break;
            case 37: /* reduce ATerminal$VarRepeat */
            {
                ArrayList<Object> list = new37();
                push(goTo(14), list);
            }
            break;
            case 38: /* reduce ANonTerminal$VarRepeat */
            {
                ArrayList<Object> list = new38();
                push(goTo(14), list);
            }
            break;
            case 39: /* reduce ATerminal$ComandoRepeat */
            {
                ArrayList<Object> list = new39();
                push(goTo(15), list);
            }
            break;
            case 40: /* reduce ANonTerminal$ComandoRepeat */
            {
                ArrayList<Object> list = new40();
                push(goTo(15), list);
            }
            break;
            case 41: /* reduce ATerminal$SenaoComando */
            {
                ArrayList<Object> list = new41();
                push(goTo(16), list);
            }
            break;
            case 42: /* reduce ANonTerminal$SenaoComando */
            {
                ArrayList<Object> list = new42();
                push(goTo(16), list);
            }
            break;
        }
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new0() /* reduce AAtipodeclaracao11Programas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PProgramas pprogramasNode1;
        {
            // Block
        TPrograma tprogramaNode2;
        TIdentificador tidentificadorNode3;
        TInicio tinicioNode4;
        PDeclaracao pdeclaracaoNode5;
        PComando pcomandoNode9;
        TFim tfimNode10;
        tprogramaNode2 = (TPrograma)nodeArrayList1.get(0);
        tidentificadorNode3 = (TIdentificador)nodeArrayList2.get(0);
        tinicioNode4 = (TInicio)nodeArrayList3.get(0);
        {
            // Block
        PTipo ptipoNode6;
        TDoisPontos tdoispontosNode7;
        LinkedList<Object> listNode8 = new LinkedList<Object>();
        ptipoNode6 = (PTipo)nodeArrayList4.get(0);
        tdoispontosNode7 = (TDoisPontos)nodeArrayList5.get(0);
        {
            // Block
        }

        pdeclaracaoNode5 = new ATipoDeclaracao(ptipoNode6, tdoispontosNode7, listNode8);
        }
        pcomandoNode9 = (PComando)nodeArrayList6.get(0);
        tfimNode10 = (TFim)nodeArrayList7.get(0);

        pprogramasNode1 = new AProgramas(tprogramaNode2, tidentificadorNode3, tinicioNode4, pdeclaracaoNode5, pcomandoNode9, tfimNode10);
        }
	nodeList.add(pprogramasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new1() /* reduce AAtipodeclaracao21Programas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PProgramas pprogramasNode1;
        {
            // Block
        TPrograma tprogramaNode2;
        TIdentificador tidentificadorNode3;
        TInicio tinicioNode4;
        PDeclaracao pdeclaracaoNode5;
        PComando pcomandoNode10;
        TFim tfimNode11;
        tprogramaNode2 = (TPrograma)nodeArrayList1.get(0);
        tidentificadorNode3 = (TIdentificador)nodeArrayList2.get(0);
        tinicioNode4 = (TInicio)nodeArrayList3.get(0);
        {
            // Block
        PTipo ptipoNode6;
        TDoisPontos tdoispontosNode7;
        LinkedList<Object> listNode9 = new LinkedList<Object>();
        ptipoNode6 = (PTipo)nodeArrayList4.get(0);
        tdoispontosNode7 = (TDoisPontos)nodeArrayList5.get(0);
        {
            // Block
        LinkedList<Object> listNode8 = new LinkedList<Object>();
        listNode8 = (LinkedList)nodeArrayList6.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }

        pdeclaracaoNode5 = new ATipoDeclaracao(ptipoNode6, tdoispontosNode7, listNode9);
        }
        pcomandoNode10 = (PComando)nodeArrayList7.get(0);
        tfimNode11 = (TFim)nodeArrayList8.get(0);

        pprogramasNode1 = new AProgramas(tprogramaNode2, tidentificadorNode3, tinicioNode4, pdeclaracaoNode5, pcomandoNode10, tfimNode11);
        }
	nodeList.add(pprogramasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new2() /* reduce AConst1Programas */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PProgramas pprogramasNode1;
        {
            // Block
        TPrograma tprogramaNode2;
        TIdentificador tidentificadorNode3;
        TInicio tinicioNode4;
        PDeclaracao pdeclaracaoNode5;
        PComando pcomandoNode10;
        TFim tfimNode11;
        tprogramaNode2 = (TPrograma)nodeArrayList1.get(0);
        tidentificadorNode3 = (TIdentificador)nodeArrayList2.get(0);
        tinicioNode4 = (TInicio)nodeArrayList3.get(0);
        {
            // Block
        TConst tconstNode6;
        TIdentificador tidentificadorNode7;
        PValor pvalorNode8;
        TPontoVirgula tpontovirgulaNode9;
        tconstNode6 = (TConst)nodeArrayList4.get(0);
        tidentificadorNode7 = (TIdentificador)nodeArrayList5.get(0);
        pvalorNode8 = (PValor)nodeArrayList6.get(0);
        tpontovirgulaNode9 = (TPontoVirgula)nodeArrayList7.get(0);

        pdeclaracaoNode5 = new AConstDeclaracao(tconstNode6, tidentificadorNode7, pvalorNode8, tpontovirgulaNode9);
        }
        pcomandoNode10 = (PComando)nodeArrayList8.get(0);
        tfimNode11 = (TFim)nodeArrayList9.get(0);

        pprogramasNode1 = new AProgramas(tprogramaNode2, tidentificadorNode3, tinicioNode4, pdeclaracaoNode5, pcomandoNode10, tfimNode11);
        }
	nodeList.add(pprogramasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new3() /* reduce AVarRepeat */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVarRepeat pvarrepeatNode1;
        {
            // Block
        PVar pvarNode2;
        TPontoVirgula tpontovirgulaNode3;
        pvarNode2 = (PVar)nodeArrayList1.get(0);
        tpontovirgulaNode3 = (TPontoVirgula)nodeArrayList2.get(0);

        pvarrepeatNode1 = new AVarRepeat(pvarNode2, tpontovirgulaNode3);
        }
	nodeList.add(pvarrepeatNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new4() /* reduce ATesteComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PVar pvarNode2;
        TRecebe trecebeNode3;
        PExp pexpNode4;
        TPontoVirgula tpontovirgulaNode5;
        pvarNode2 = (PVar)nodeArrayList1.get(0);
        trecebeNode3 = (TRecebe)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontoVirgula)nodeArrayList4.get(0);

        pcomandoNode1 = new ATesteComando(pvarNode2, trecebeNode3, pexpNode4, tpontovirgulaNode5);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new5() /* reduce ALeiaComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TLeia tleiaNode2;
        TParenteseE tparenteseeNode3;
        PValor pvalorNode4;
        TVirgula tvirgulaNode5;
        PValors pvalorsNode6;
        TParenteseD tparentesedNode7;
        TPontoVirgula tpontovirgulaNode8;
        tleiaNode2 = (TLeia)nodeArrayList1.get(0);
        tparenteseeNode3 = (TParenteseE)nodeArrayList2.get(0);
        pvalorNode4 = (PValor)nodeArrayList3.get(0);
        tvirgulaNode5 = (TVirgula)nodeArrayList4.get(0);
        pvalorsNode6 = (PValors)nodeArrayList5.get(0);
        tparentesedNode7 = (TParenteseD)nodeArrayList6.get(0);
        tpontovirgulaNode8 = (TPontoVirgula)nodeArrayList7.get(0);

        pcomandoNode1 = new ALeiaComando(tleiaNode2, tparenteseeNode3, pvalorNode4, tvirgulaNode5, pvalorsNode6, tparentesedNode7, tpontovirgulaNode8);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new6() /* reduce AEscrevaComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TEscreva tescrevaNode2;
        TParenteseE tparenteseeNode3;
        PExp pexpNode4;
        TVirgula tvirgulaNode5;
        PExps pexpsNode6;
        TParenteseD tparentesedNode7;
        TPontoVirgula tpontovirgulaNode8;
        tescrevaNode2 = (TEscreva)nodeArrayList1.get(0);
        tparenteseeNode3 = (TParenteseE)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tvirgulaNode5 = (TVirgula)nodeArrayList4.get(0);
        pexpsNode6 = (PExps)nodeArrayList5.get(0);
        tparentesedNode7 = (TParenteseD)nodeArrayList6.get(0);
        tpontovirgulaNode8 = (TPontoVirgula)nodeArrayList7.get(0);

        pcomandoNode1 = new AEscrevaComando(tescrevaNode2, tparenteseeNode3, pexpNode4, tvirgulaNode5, pexpsNode6, tparentesedNode7, tpontovirgulaNode8);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new7() /* reduce AAsecomando1Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TSe tseNode2;
        TParenteseE tparenteseeNode3;
        PExpLogica pexplogicaNode4;
        TParenteseD tparentesedNode5;
        TE teNode6;
        TEntao tentaoNode7;
        LinkedList<Object> listNode8 = new LinkedList<Object>();
        LinkedList<Object> listNode9 = new LinkedList<Object>();
        TFimSe tfimseNode10;
        TPontoVirgula tpontovirgulaNode11;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tparenteseeNode3 = (TParenteseE)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tparentesedNode5 = (TParenteseD)nodeArrayList4.get(0);
        teNode6 = (TE)nodeArrayList5.get(0);
        tentaoNode7 = (TEntao)nodeArrayList6.get(0);
        {
            // Block
        }
        {
            // Block
        }
        tfimseNode10 = (TFimSe)nodeArrayList7.get(0);
        tpontovirgulaNode11 = (TPontoVirgula)nodeArrayList8.get(0);

        pcomandoNode1 = new ASeComando(tseNode2, tparenteseeNode3, pexplogicaNode4, tparentesedNode5, teNode6, tentaoNode7, listNode8, listNode9, tfimseNode10, tpontovirgulaNode11);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new8() /* reduce AAsecomando2Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TSe tseNode2;
        TParenteseE tparenteseeNode3;
        PExpLogica pexplogicaNode4;
        TParenteseD tparentesedNode5;
        TE teNode6;
        TEntao tentaoNode7;
        LinkedList<Object> listNode9 = new LinkedList<Object>();
        LinkedList<Object> listNode10 = new LinkedList<Object>();
        TFimSe tfimseNode11;
        TPontoVirgula tpontovirgulaNode12;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tparenteseeNode3 = (TParenteseE)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tparentesedNode5 = (TParenteseD)nodeArrayList4.get(0);
        teNode6 = (TE)nodeArrayList5.get(0);
        tentaoNode7 = (TEntao)nodeArrayList6.get(0);
        {
            // Block
        LinkedList<Object> listNode8 = new LinkedList<Object>();
        listNode8 = (LinkedList)nodeArrayList7.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }
        {
            // Block
        }
        tfimseNode11 = (TFimSe)nodeArrayList8.get(0);
        tpontovirgulaNode12 = (TPontoVirgula)nodeArrayList9.get(0);

        pcomandoNode1 = new ASeComando(tseNode2, tparenteseeNode3, pexplogicaNode4, tparentesedNode5, teNode6, tentaoNode7, listNode9, listNode10, tfimseNode11, tpontovirgulaNode12);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new9() /* reduce AAsecomando3Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TSe tseNode2;
        TParenteseE tparenteseeNode3;
        PExpLogica pexplogicaNode4;
        TParenteseD tparentesedNode5;
        TE teNode6;
        TEntao tentaoNode7;
        LinkedList<Object> listNode8 = new LinkedList<Object>();
        LinkedList<Object> listNode10 = new LinkedList<Object>();
        TFimSe tfimseNode11;
        TPontoVirgula tpontovirgulaNode12;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tparenteseeNode3 = (TParenteseE)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tparentesedNode5 = (TParenteseD)nodeArrayList4.get(0);
        teNode6 = (TE)nodeArrayList5.get(0);
        tentaoNode7 = (TEntao)nodeArrayList6.get(0);
        {
            // Block
        }
        {
            // Block
        LinkedList<Object> listNode9 = new LinkedList<Object>();
        listNode9 = (LinkedList)nodeArrayList7.get(0);
	if(listNode9 != null)
	{
	  listNode10.addAll(listNode9);
	}
        }
        tfimseNode11 = (TFimSe)nodeArrayList8.get(0);
        tpontovirgulaNode12 = (TPontoVirgula)nodeArrayList9.get(0);

        pcomandoNode1 = new ASeComando(tseNode2, tparenteseeNode3, pexplogicaNode4, tparentesedNode5, teNode6, tentaoNode7, listNode8, listNode10, tfimseNode11, tpontovirgulaNode12);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new10() /* reduce AAsecomando4Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TSe tseNode2;
        TParenteseE tparenteseeNode3;
        PExpLogica pexplogicaNode4;
        TParenteseD tparentesedNode5;
        TE teNode6;
        TEntao tentaoNode7;
        LinkedList<Object> listNode9 = new LinkedList<Object>();
        LinkedList<Object> listNode11 = new LinkedList<Object>();
        TFimSe tfimseNode12;
        TPontoVirgula tpontovirgulaNode13;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tparenteseeNode3 = (TParenteseE)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tparentesedNode5 = (TParenteseD)nodeArrayList4.get(0);
        teNode6 = (TE)nodeArrayList5.get(0);
        tentaoNode7 = (TEntao)nodeArrayList6.get(0);
        {
            // Block
        LinkedList<Object> listNode8 = new LinkedList<Object>();
        listNode8 = (LinkedList)nodeArrayList7.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }
        {
            // Block
        LinkedList<Object> listNode10 = new LinkedList<Object>();
        listNode10 = (LinkedList)nodeArrayList8.get(0);
	if(listNode10 != null)
	{
	  listNode11.addAll(listNode10);
	}
        }
        tfimseNode12 = (TFimSe)nodeArrayList9.get(0);
        tpontovirgulaNode13 = (TPontoVirgula)nodeArrayList10.get(0);

        pcomandoNode1 = new ASeComando(tseNode2, tparenteseeNode3, pexplogicaNode4, tparentesedNode5, teNode6, tentaoNode7, listNode9, listNode11, tfimseNode12, tpontovirgulaNode13);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new11() /* reduce AAvalieComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TAvalie tavalieNode2;
        TParenteseE tparenteseeNode3;
        PExp pexpNode4;
        TParenteseD tparentesedNode5;
        tavalieNode2 = (TAvalie)nodeArrayList1.get(0);
        tparenteseeNode3 = (TParenteseE)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tparentesedNode5 = (TParenteseD)nodeArrayList4.get(0);

        pcomandoNode1 = new AAvalieComando(tavalieNode2, tparenteseeNode3, pexpNode4, tparentesedNode5);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new12() /* reduce AAenquantocomando1Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TEnquanto tenquantoNode2;
        TParenteseE tparenteseeNode3;
        PExpLogica pexplogicaNode4;
        TParenteseD tparentesedNode5;
        TFaca tfacaNode6;
        LinkedList<Object> listNode7 = new LinkedList<Object>();
        TFimEnquanto tfimenquantoNode8;
        tenquantoNode2 = (TEnquanto)nodeArrayList1.get(0);
        tparenteseeNode3 = (TParenteseE)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tparentesedNode5 = (TParenteseD)nodeArrayList4.get(0);
        tfacaNode6 = (TFaca)nodeArrayList5.get(0);
        {
            // Block
        }
        tfimenquantoNode8 = (TFimEnquanto)nodeArrayList6.get(0);

        pcomandoNode1 = new AEnquantoComando(tenquantoNode2, tparenteseeNode3, pexplogicaNode4, tparentesedNode5, tfacaNode6, listNode7, tfimenquantoNode8);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new13() /* reduce AAenquantocomando2Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TEnquanto tenquantoNode2;
        TParenteseE tparenteseeNode3;
        PExpLogica pexplogicaNode4;
        TParenteseD tparentesedNode5;
        TFaca tfacaNode6;
        LinkedList<Object> listNode8 = new LinkedList<Object>();
        TFimEnquanto tfimenquantoNode9;
        tenquantoNode2 = (TEnquanto)nodeArrayList1.get(0);
        tparenteseeNode3 = (TParenteseE)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tparentesedNode5 = (TParenteseD)nodeArrayList4.get(0);
        tfacaNode6 = (TFaca)nodeArrayList5.get(0);
        {
            // Block
        LinkedList<Object> listNode7 = new LinkedList<Object>();
        listNode7 = (LinkedList)nodeArrayList6.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        tfimenquantoNode9 = (TFimEnquanto)nodeArrayList7.get(0);

        pcomandoNode1 = new AEnquantoComando(tenquantoNode2, tparenteseeNode3, pexplogicaNode4, tparentesedNode5, tfacaNode6, listNode8, tfimenquantoNode9);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new14() /* reduce AArepitacomando1Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TRepita trepitaNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        TAte tateNode4;
        TParenteseE tparenteseeNode5;
        PExpLogica pexplogicaNode6;
        TParenteseD tparentesedNode7;
        TPontoVirgula tpontovirgulaNode8;
        trepitaNode2 = (TRepita)nodeArrayList1.get(0);
        {
            // Block
        }
        tateNode4 = (TAte)nodeArrayList2.get(0);
        tparenteseeNode5 = (TParenteseE)nodeArrayList3.get(0);
        pexplogicaNode6 = (PExpLogica)nodeArrayList4.get(0);
        tparentesedNode7 = (TParenteseD)nodeArrayList5.get(0);
        tpontovirgulaNode8 = (TPontoVirgula)nodeArrayList6.get(0);

        pcomandoNode1 = new ARepitaComando(trepitaNode2, listNode3, tateNode4, tparenteseeNode5, pexplogicaNode6, tparentesedNode7, tpontovirgulaNode8);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new15() /* reduce AArepitacomando2Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TRepita trepitaNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        TAte tateNode5;
        TParenteseE tparenteseeNode6;
        PExpLogica pexplogicaNode7;
        TParenteseD tparentesedNode8;
        TPontoVirgula tpontovirgulaNode9;
        trepitaNode2 = (TRepita)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        tateNode5 = (TAte)nodeArrayList3.get(0);
        tparenteseeNode6 = (TParenteseE)nodeArrayList4.get(0);
        pexplogicaNode7 = (PExpLogica)nodeArrayList5.get(0);
        tparentesedNode8 = (TParenteseD)nodeArrayList6.get(0);
        tpontovirgulaNode9 = (TPontoVirgula)nodeArrayList7.get(0);

        pcomandoNode1 = new ARepitaComando(trepitaNode2, listNode4, tateNode5, tparenteseeNode6, pexplogicaNode7, tparentesedNode8, tpontovirgulaNode9);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new16() /* reduce AAparacomando1Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TPara tparaNode2;
        PVar pvarNode3;
        TDe tdeNode4;
        TNumeroInt tnumerointNode5;
        TAte tateNode6;
        TNumeroInt tnumerointNode7;
        TFaca tfacaNode8;
        LinkedList<Object> listNode9 = new LinkedList<Object>();
        TFimPara tfimparaNode10;
        TPontoVirgula tpontovirgulaNode11;
        tparaNode2 = (TPara)nodeArrayList1.get(0);
        pvarNode3 = (PVar)nodeArrayList2.get(0);
        tdeNode4 = (TDe)nodeArrayList3.get(0);
        tnumerointNode5 = (TNumeroInt)nodeArrayList4.get(0);
        tateNode6 = (TAte)nodeArrayList5.get(0);
        tnumerointNode7 = (TNumeroInt)nodeArrayList6.get(0);
        tfacaNode8 = (TFaca)nodeArrayList7.get(0);
        {
            // Block
        }
        tfimparaNode10 = (TFimPara)nodeArrayList8.get(0);
        tpontovirgulaNode11 = (TPontoVirgula)nodeArrayList9.get(0);

        pcomandoNode1 = new AParaComando(tparaNode2, pvarNode3, tdeNode4, tnumerointNode5, tateNode6, tnumerointNode7, tfacaNode8, listNode9, tfimparaNode10, tpontovirgulaNode11);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new17() /* reduce AAparacomando2Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TPara tparaNode2;
        PVar pvarNode3;
        TDe tdeNode4;
        TNumeroInt tnumerointNode5;
        TAte tateNode6;
        TNumeroInt tnumerointNode7;
        TFaca tfacaNode8;
        LinkedList<Object> listNode10 = new LinkedList<Object>();
        TFimPara tfimparaNode11;
        TPontoVirgula tpontovirgulaNode12;
        tparaNode2 = (TPara)nodeArrayList1.get(0);
        pvarNode3 = (PVar)nodeArrayList2.get(0);
        tdeNode4 = (TDe)nodeArrayList3.get(0);
        tnumerointNode5 = (TNumeroInt)nodeArrayList4.get(0);
        tateNode6 = (TAte)nodeArrayList5.get(0);
        tnumerointNode7 = (TNumeroInt)nodeArrayList6.get(0);
        tfacaNode8 = (TFaca)nodeArrayList7.get(0);
        {
            // Block
        LinkedList<Object> listNode9 = new LinkedList<Object>();
        listNode9 = (LinkedList)nodeArrayList8.get(0);
	if(listNode9 != null)
	{
	  listNode10.addAll(listNode9);
	}
        }
        tfimparaNode11 = (TFimPara)nodeArrayList9.get(0);
        tpontovirgulaNode12 = (TPontoVirgula)nodeArrayList10.get(0);

        pcomandoNode1 = new AParaComando(tparaNode2, pvarNode3, tdeNode4, tnumerointNode5, tateNode6, tnumerointNode7, tfacaNode8, listNode10, tfimparaNode11, tpontovirgulaNode12);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new18() /* reduce AAparapassocomando1Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TPara tparaNode2;
        PVar pvarNode3;
        TDe tdeNode4;
        TNumeroInt tnumerointNode5;
        TPasso tpassoNode6;
        TNumeroInt tnumerointNode7;
        TAte tateNode8;
        TNumeroInt tnumerointNode9;
        LinkedList<Object> listNode10 = new LinkedList<Object>();
        TPontoVirgula tpontovirgulaNode11;
        tparaNode2 = (TPara)nodeArrayList1.get(0);
        pvarNode3 = (PVar)nodeArrayList2.get(0);
        tdeNode4 = (TDe)nodeArrayList3.get(0);
        tnumerointNode5 = (TNumeroInt)nodeArrayList4.get(0);
        tpassoNode6 = (TPasso)nodeArrayList5.get(0);
        tnumerointNode7 = (TNumeroInt)nodeArrayList6.get(0);
        tateNode8 = (TAte)nodeArrayList7.get(0);
        tnumerointNode9 = (TNumeroInt)nodeArrayList8.get(0);
        {
            // Block
        }
        tpontovirgulaNode11 = (TPontoVirgula)nodeArrayList9.get(0);

        pcomandoNode1 = new AParaPassoComando(tparaNode2, pvarNode3, tdeNode4, tnumerointNode5, tpassoNode6, tnumerointNode7, tateNode8, tnumerointNode9, listNode10, tpontovirgulaNode11);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new19() /* reduce AAparapassocomando2Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TPara tparaNode2;
        PVar pvarNode3;
        TDe tdeNode4;
        TNumeroInt tnumerointNode5;
        TPasso tpassoNode6;
        TNumeroInt tnumerointNode7;
        TAte tateNode8;
        TNumeroInt tnumerointNode9;
        LinkedList<Object> listNode11 = new LinkedList<Object>();
        TPontoVirgula tpontovirgulaNode12;
        tparaNode2 = (TPara)nodeArrayList1.get(0);
        pvarNode3 = (PVar)nodeArrayList2.get(0);
        tdeNode4 = (TDe)nodeArrayList3.get(0);
        tnumerointNode5 = (TNumeroInt)nodeArrayList4.get(0);
        tpassoNode6 = (TPasso)nodeArrayList5.get(0);
        tnumerointNode7 = (TNumeroInt)nodeArrayList6.get(0);
        tateNode8 = (TAte)nodeArrayList7.get(0);
        tnumerointNode9 = (TNumeroInt)nodeArrayList8.get(0);
        {
            // Block
        LinkedList<Object> listNode10 = new LinkedList<Object>();
        listNode10 = (LinkedList)nodeArrayList9.get(0);
	if(listNode10 != null)
	{
	  listNode11.addAll(listNode10);
	}
        }
        tpontovirgulaNode12 = (TPontoVirgula)nodeArrayList10.get(0);

        pcomandoNode1 = new AParaPassoComando(tparaNode2, pvarNode3, tdeNode4, tnumerointNode5, tpassoNode6, tnumerointNode7, tateNode8, tnumerointNode9, listNode11, tpontovirgulaNode12);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new20() /* reduce AAsenaocomando1SenaoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSenaoComando psenaocomandoNode1;
        {
            // Block
        TSenao tsenaoNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        tsenaoNode2 = (TSenao)nodeArrayList1.get(0);
        {
            // Block
        }

        psenaocomandoNode1 = new ASenaoComando(tsenaoNode2, listNode3);
        }
	nodeList.add(psenaocomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new21() /* reduce AAsenaocomando2SenaoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSenaoComando psenaocomandoNode1;
        {
            // Block
        TSenao tsenaoNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        tsenaoNode2 = (TSenao)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        psenaocomandoNode1 = new ASenaoComando(tsenaoNode2, listNode4);
        }
	nodeList.add(psenaocomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new22() /* reduce AComandoRepeat */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoRepeat pcomandorepeatNode1;
        {
            // Block
        PComando pcomandoNode2;
        TPontoVirgula tpontovirgulaNode3;
        pcomandoNode2 = (PComando)nodeArrayList1.get(0);
        tpontovirgulaNode3 = (TPontoVirgula)nodeArrayList2.get(0);

        pcomandorepeatNode1 = new AComandoRepeat(pcomandoNode2, tpontovirgulaNode3);
        }
	nodeList.add(pcomandorepeatNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new23() /* reduce AValors */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValors pvalorsNode1;
        {
            // Block
        PValor pvalorNode2;
        pvalorNode2 = (PValor)nodeArrayList1.get(0);

        pvalorsNode1 = new AValors(pvalorNode2);
        }
	nodeList.add(pvalorsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new24() /* reduce AExps */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExps pexpsNode1;
        {
            // Block
        PExp pexpNode2;
        pexpNode2 = (PExp)nodeArrayList1.get(0);

        pexpsNode1 = new AExps(pexpNode2);
        }
	nodeList.add(pexpsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new25() /* reduce AComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        PComando pcomandoNode2;
        pcomandoNode2 = (PComando)nodeArrayList1.get(0);

        pcomandosNode1 = new AComandos(pcomandoNode2);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new26() /* reduce AInteiroTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TInteiro tinteiroNode2;
        tinteiroNode2 = (TInteiro)nodeArrayList1.get(0);

        ptipoNode1 = new AInteiroTipo(tinteiroNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new27() /* reduce ARealTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TReal trealNode2;
        trealNode2 = (TReal)nodeArrayList1.get(0);

        ptipoNode1 = new ARealTipo(trealNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new28() /* reduce ACaracterTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TCaracter tcaracterNode2;
        tcaracterNode2 = (TCaracter)nodeArrayList1.get(0);

        ptipoNode1 = new ACaracterTipo(tcaracterNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new29() /* reduce AIdentificadorVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVar pvarNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);

        pvarNode1 = new AIdentificadorVar(tidentificadorNode2);
        }
	nodeList.add(pvarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new30() /* reduce AStringVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVar pvarNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        TColcheteE tcolcheteeNode3;
        TIdentificador tidentificadorNode4;
        TColcheteD tcolchetedNode5;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);
        tcolcheteeNode3 = (TColcheteE)nodeArrayList2.get(0);
        tidentificadorNode4 = (TIdentificador)nodeArrayList3.get(0);
        tcolchetedNode5 = (TColcheteD)nodeArrayList4.get(0);

        pvarNode1 = new AStringVar(tidentificadorNode2, tcolcheteeNode3, tidentificadorNode4, tcolchetedNode5);
        }
	nodeList.add(pvarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new31() /* reduce AIdentificadors */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIdentificadors pidentificadorsNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);

        pidentificadorsNode1 = new AIdentificadors(tidentificadorNode2);
        }
	nodeList.add(pidentificadorsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new32() /* reduce AStringValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TString tstringNode2;
        tstringNode2 = (TString)nodeArrayList1.get(0);

        pvalorNode1 = new AStringValor(tstringNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new33() /* reduce ANumeroIntValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TNumeroInt tnumerointNode2;
        tnumerointNode2 = (TNumeroInt)nodeArrayList1.get(0);

        pvalorNode1 = new ANumeroIntValor(tnumerointNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new34() /* reduce ANumeroRealValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TNumeroReal tnumerorealNode2;
        tnumerorealNode2 = (TNumeroReal)nodeArrayList1.get(0);

        pvalorNode1 = new ANumeroRealValor(tnumerorealNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new35() /* reduce AExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        TNumero tnumeroNode2;
        tnumeroNode2 = (TNumero)nodeArrayList1.get(0);

        pexpNode1 = new AExp(tnumeroNode2);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new36() /* reduce AExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        TNumero tnumeroNode2;
        tnumeroNode2 = (TNumero)nodeArrayList1.get(0);

        pexplogicaNode1 = new AExpLogica(tnumeroNode2);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new37() /* reduce ATerminal$VarRepeat */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PVarRepeat pvarrepeatNode1;
        pvarrepeatNode1 = (PVarRepeat)nodeArrayList1.get(0);
	if(pvarrepeatNode1 != null)
	{
	  listNode2.add(pvarrepeatNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new38() /* reduce ANonTerminal$VarRepeat */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PVarRepeat pvarrepeatNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pvarrepeatNode2 = (PVarRepeat)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pvarrepeatNode2 != null)
	{
	  listNode3.add(pvarrepeatNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new39() /* reduce ATerminal$ComandoRepeat */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PComandoRepeat pcomandorepeatNode1;
        pcomandorepeatNode1 = (PComandoRepeat)nodeArrayList1.get(0);
	if(pcomandorepeatNode1 != null)
	{
	  listNode2.add(pcomandorepeatNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new40() /* reduce ANonTerminal$ComandoRepeat */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PComandoRepeat pcomandorepeatNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pcomandorepeatNode2 = (PComandoRepeat)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pcomandorepeatNode2 != null)
	{
	  listNode3.add(pcomandorepeatNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new41() /* reduce ATerminal$SenaoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PSenaoComando psenaocomandoNode1;
        psenaocomandoNode1 = (PSenaoComando)nodeArrayList1.get(0);
	if(psenaocomandoNode1 != null)
	{
	  listNode2.add(psenaocomandoNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new42() /* reduce ANonTerminal$SenaoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PSenaoComando psenaocomandoNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        psenaocomandoNode2 = (PSenaoComando)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(psenaocomandoNode2 != null)
	{
	  listNode3.add(psenaocomandoNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {12, SHIFT, 1}, },
			{{-1, ERROR, 1}, {53, SHIFT, 3}, },
			{{-1, ERROR, 2}, {80, ACCEPT, -1}, },
			{{-1, ERROR, 3}, {5, SHIFT, 4}, },
			{{-1, ERROR, 4}, {10, SHIFT, 5}, {13, SHIFT, 6}, {29, SHIFT, 7}, {33, SHIFT, 8}, },
			{{-1, REDUCE, 26}, },
			{{-1, REDUCE, 27}, },
			{{-1, REDUCE, 28}, },
			{{-1, ERROR, 8}, {53, SHIFT, 10}, },
			{{-1, ERROR, 9}, {37, SHIFT, 11}, },
			{{-1, ERROR, 10}, {70, SHIFT, 12}, {71, SHIFT, 13}, {74, SHIFT, 14}, },
			{{-1, ERROR, 11}, {4, SHIFT, 16}, {6, SHIFT, 17}, {14, SHIFT, 18}, {16, SHIFT, 19}, {28, SHIFT, 20}, {39, SHIFT, 21}, {42, SHIFT, 22}, {53, SHIFT, 23}, },
			{{-1, REDUCE, 33}, },
			{{-1, REDUCE, 34}, },
			{{-1, REDUCE, 32}, },
			{{-1, ERROR, 15}, {66, SHIFT, 28}, },
			{{-1, ERROR, 16}, {53, SHIFT, 23}, },
			{{-1, ERROR, 17}, {63, SHIFT, 30}, },
			{{-1, ERROR, 18}, {4, SHIFT, 16}, {6, SHIFT, 17}, {14, SHIFT, 18}, {16, SHIFT, 19}, {27, SHIFT, 31}, {28, SHIFT, 20}, {39, SHIFT, 21}, {42, SHIFT, 22}, {53, SHIFT, 23}, },
			{{-1, ERROR, 19}, {63, SHIFT, 36}, },
			{{-1, ERROR, 20}, {63, SHIFT, 37}, },
			{{-1, ERROR, 21}, {63, SHIFT, 38}, },
			{{-1, ERROR, 22}, {63, SHIFT, 39}, },
			{{-1, REDUCE, 29}, {32, SHIFT, 40}, },
			{{-1, REDUCE, 37}, },
			{{-1, ERROR, 25}, {45, SHIFT, 41}, },
			{{-1, ERROR, 26}, {66, SHIFT, 42}, {67, SHIFT, 43}, },
			{{-1, ERROR, 27}, {4, SHIFT, 16}, {6, SHIFT, 17}, {14, SHIFT, 18}, {16, SHIFT, 19}, {28, SHIFT, 20}, {39, SHIFT, 21}, {42, SHIFT, 22}, {53, SHIFT, 23}, },
			{{-1, ERROR, 28}, {4, SHIFT, 16}, {6, SHIFT, 17}, {14, SHIFT, 18}, {16, SHIFT, 19}, {28, SHIFT, 20}, {39, SHIFT, 21}, {42, SHIFT, 22}, {53, SHIFT, 23}, },
			{{-1, ERROR, 29}, {34, SHIFT, 47}, },
			{{-1, ERROR, 30}, {70, SHIFT, 12}, {71, SHIFT, 13}, {74, SHIFT, 14}, },
			{{-1, ERROR, 31}, {63, SHIFT, 49}, },
			{{-1, ERROR, 32}, {66, SHIFT, 50}, },
			{{-1, REDUCE, 39}, },
			{{-1, ERROR, 34}, {67, SHIFT, 43}, },
			{{-1, ERROR, 35}, {4, SHIFT, 16}, {6, SHIFT, 17}, {14, SHIFT, 18}, {16, SHIFT, 19}, {27, SHIFT, 51}, {28, SHIFT, 20}, {39, SHIFT, 21}, {42, SHIFT, 22}, {53, SHIFT, 23}, },
			{{-1, ERROR, 36}, {55, SHIFT, 53}, },
			{{-1, ERROR, 37}, {55, SHIFT, 55}, },
			{{-1, ERROR, 38}, {55, SHIFT, 53}, },
			{{-1, ERROR, 39}, {55, SHIFT, 55}, },
			{{-1, ERROR, 40}, {53, SHIFT, 59}, },
			{{-1, REDUCE, 0}, },
			{{-1, REDUCE, 3}, },
			{{-1, ERROR, 43}, {55, SHIFT, 55}, },
			{{-1, REDUCE, 38}, },
			{{-1, ERROR, 45}, {45, SHIFT, 61}, },
			{{-1, ERROR, 46}, {45, SHIFT, 62}, },
			{{-1, ERROR, 47}, {70, SHIFT, 63}, },
			{{-1, ERROR, 48}, {72, SHIFT, 64}, },
			{{-1, ERROR, 49}, {55, SHIFT, 53}, },
			{{-1, REDUCE, 22}, },
			{{-1, ERROR, 51}, {63, SHIFT, 66}, },
			{{-1, REDUCE, 40}, },
			{{-1, REDUCE, 36}, },
			{{-1, ERROR, 54}, {62, SHIFT, 67}, },
			{{-1, REDUCE, 35}, },
			{{-1, ERROR, 56}, {62, SHIFT, 68}, },
			{{-1, ERROR, 57}, {62, SHIFT, 69}, },
			{{-1, ERROR, 58}, {72, SHIFT, 70}, },
			{{-1, ERROR, 59}, {31, SHIFT, 71}, },
			{{-1, ERROR, 60}, {66, SHIFT, 72}, },
			{{-1, REDUCE, 1}, },
			{{-1, REDUCE, 2}, },
			{{-1, ERROR, 63}, {27, SHIFT, 73}, {64, SHIFT, 74}, },
			{{-1, ERROR, 64}, {70, SHIFT, 12}, {71, SHIFT, 13}, {74, SHIFT, 14}, },
			{{-1, ERROR, 65}, {62, SHIFT, 77}, },
			{{-1, ERROR, 66}, {55, SHIFT, 53}, },
			{{-1, ERROR, 67}, {38, SHIFT, 79}, },
			{{-1, REDUCE, 11}, },
			{{-1, ERROR, 69}, {3, SHIFT, 80}, },
			{{-1, ERROR, 70}, {55, SHIFT, 55}, },
			{{-1, REDUCE, 30}, },
			{{-1, REDUCE, 4}, },
			{{-1, ERROR, 73}, {70, SHIFT, 83}, },
			{{-1, ERROR, 74}, {70, SHIFT, 84}, },
			{{-1, ERROR, 75}, {62, SHIFT, 85}, },
			{{-1, REDUCE, 23}, },
			{{-1, ERROR, 77}, {66, SHIFT, 86}, },
			{{-1, ERROR, 78}, {62, SHIFT, 87}, },
			{{-1, ERROR, 79}, {40, SHIFT, 88}, },
			{{-1, ERROR, 80}, {4, SHIFT, 16}, {6, SHIFT, 17}, {14, SHIFT, 18}, {16, SHIFT, 19}, {28, SHIFT, 20}, {39, SHIFT, 21}, {42, SHIFT, 22}, {46, SHIFT, 89}, {53, SHIFT, 23}, },
			{{-1, ERROR, 81}, {62, SHIFT, 91}, },
			{{-1, REDUCE, 24}, },
			{{-1, ERROR, 83}, {3, SHIFT, 92}, },
			{{-1, ERROR, 84}, {27, SHIFT, 93}, },
			{{-1, ERROR, 85}, {66, SHIFT, 94}, },
			{{-1, REDUCE, 14}, },
			{{-1, ERROR, 87}, {66, SHIFT, 95}, },
			{{-1, ERROR, 88}, {4, SHIFT, 16}, {6, SHIFT, 17}, {14, SHIFT, 18}, {16, SHIFT, 19}, {17, SHIFT, 96}, {28, SHIFT, 20}, {39, SHIFT, 21}, {42, SHIFT, 22}, {50, SHIFT, 97}, {53, SHIFT, 23}, },
			{{-1, REDUCE, 12}, },
			{{-1, ERROR, 90}, {4, SHIFT, 16}, {6, SHIFT, 17}, {14, SHIFT, 18}, {16, SHIFT, 19}, {28, SHIFT, 20}, {39, SHIFT, 21}, {42, SHIFT, 22}, {46, SHIFT, 101}, {53, SHIFT, 23}, },
			{{-1, ERROR, 91}, {66, SHIFT, 102}, },
			{{-1, ERROR, 92}, {2, SHIFT, 103}, {4, SHIFT, 16}, {6, SHIFT, 17}, {14, SHIFT, 18}, {16, SHIFT, 19}, {28, SHIFT, 20}, {39, SHIFT, 21}, {42, SHIFT, 22}, {53, SHIFT, 23}, },
			{{-1, ERROR, 93}, {70, SHIFT, 105}, },
			{{-1, REDUCE, 5}, },
			{{-1, REDUCE, 15}, },
			{{-1, REDUCE, 20}, {4, SHIFT, 16}, {6, SHIFT, 17}, {14, SHIFT, 18}, {16, SHIFT, 19}, {28, SHIFT, 20}, {39, SHIFT, 21}, {42, SHIFT, 22}, {53, SHIFT, 23}, },
			{{-1, ERROR, 97}, {66, SHIFT, 107}, },
			{{-1, REDUCE, 41}, },
			{{-1, ERROR, 99}, {4, SHIFT, 16}, {6, SHIFT, 17}, {14, SHIFT, 18}, {16, SHIFT, 19}, {17, SHIFT, 96}, {28, SHIFT, 20}, {39, SHIFT, 21}, {42, SHIFT, 22}, {50, SHIFT, 108}, {53, SHIFT, 23}, },
			{{-1, ERROR, 100}, {17, SHIFT, 96}, {50, SHIFT, 110}, },
			{{-1, REDUCE, 13}, },
			{{-1, REDUCE, 6}, },
			{{-1, ERROR, 103}, {66, SHIFT, 112}, },
			{{-1, ERROR, 104}, {2, SHIFT, 113}, {4, SHIFT, 16}, {6, SHIFT, 17}, {14, SHIFT, 18}, {16, SHIFT, 19}, {28, SHIFT, 20}, {39, SHIFT, 21}, {42, SHIFT, 22}, {53, SHIFT, 23}, },
			{{-1, ERROR, 105}, {4, SHIFT, 16}, {6, SHIFT, 17}, {14, SHIFT, 18}, {16, SHIFT, 19}, {28, SHIFT, 20}, {39, SHIFT, 21}, {42, SHIFT, 22}, {53, SHIFT, 23}, {66, SHIFT, 114}, },
			{{-1, REDUCE, 21}, {4, SHIFT, 16}, {6, SHIFT, 17}, {14, SHIFT, 18}, {16, SHIFT, 19}, {28, SHIFT, 20}, {39, SHIFT, 21}, {42, SHIFT, 22}, {53, SHIFT, 23}, },
			{{-1, REDUCE, 7}, },
			{{-1, ERROR, 108}, {66, SHIFT, 116}, },
			{{-1, ERROR, 109}, {17, SHIFT, 96}, {50, SHIFT, 117}, },
			{{-1, ERROR, 110}, {66, SHIFT, 118}, },
			{{-1, REDUCE, 42}, },
			{{-1, REDUCE, 16}, },
			{{-1, ERROR, 113}, {66, SHIFT, 119}, },
			{{-1, REDUCE, 18}, },
			{{-1, ERROR, 115}, {4, SHIFT, 16}, {6, SHIFT, 17}, {14, SHIFT, 18}, {16, SHIFT, 19}, {28, SHIFT, 20}, {39, SHIFT, 21}, {42, SHIFT, 22}, {53, SHIFT, 23}, {66, SHIFT, 120}, },
			{{-1, REDUCE, 8}, },
			{{-1, ERROR, 117}, {66, SHIFT, 121}, },
			{{-1, REDUCE, 9}, },
			{{-1, REDUCE, 17}, },
			{{-1, REDUCE, 19}, },
			{{-1, REDUCE, 10}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 2}, },
			{{-1, 24}, {27, 44}, },
			{{-1, 32}, {11, 25}, {27, 45}, {28, 46}, },
			{{-1, 98}, {100, 111}, {109, 111}, },
			{{-1, 33}, {35, 52}, {90, 52}, {99, 52}, {104, 52}, {106, 52}, {115, 52}, },
			{{-1, 75}, },
			{{-1, 81}, },
			{{-1, -1}, },
			{{-1, 9}, },
			{{-1, 34}, {11, 26}, {16, 29}, {27, 26}, },
			{{-1, -1}, },
			{{-1, 15}, {30, 48}, {64, 76}, },
			{{-1, 56}, {39, 58}, {43, 60}, {70, 82}, },
			{{-1, 54}, {38, 57}, {49, 65}, {66, 78}, },
			{{-1, 27}, },
			{{-1, 35}, {80, 90}, {88, 99}, {92, 104}, {96, 106}, {105, 115}, },
			{{-1, 100}, {99, 109}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'programa'",
			"expecting: identificador",
			"expecting: EOF",
			"expecting: 'inicio'",
			"expecting: 'inteiro', 'real', 'caracter', 'const'",
			"expecting: ':'",
			"expecting: numero int, numero real, 'string'",
			"expecting: 'para', 'leia', 'repita', 'se', 'avalie', 'enquanto', 'escreva', identificador",
			"expecting: ')', ';', ','",
			"expecting: ';'",
			"expecting: '('",
			"expecting: 'para', 'leia', 'repita', 'se', 'ate', 'avalie', 'enquanto', 'escreva', identificador",
			"expecting: '[', 'de', ';', '<-'",
			"expecting: 'fim.'",
			"expecting: ';', '<-'",
			"expecting: 'de'",
			"expecting: 'fim para', 'para', 'leia', 'repita', 'se', 'senao', 'ate', 'avalie', 'enquanto', 'escreva', 'fim enquanto', 'fim se', identificador, ';'",
			"expecting: '<-'",
			"expecting: numero",
			"expecting: numero int",
			"expecting: ','",
			"expecting: ')'",
			"expecting: ']'",
			"expecting: 'ate', 'passo'",
			"expecting: 'e'",
			"expecting: 'fim.', ';'",
			"expecting: 'faca'",
			"expecting: 'de', ';', '<-'",
			"expecting: 'entao'",
			"expecting: 'para', 'leia', 'repita', 'se', 'avalie', 'enquanto', 'escreva', 'fim enquanto', identificador",
			"expecting: 'ate'",
			"expecting: 'para', 'leia', 'repita', 'se', 'senao', 'avalie', 'enquanto', 'escreva', 'fim se', identificador",
			"expecting: 'fim para', 'para', 'leia', 'repita', 'se', 'avalie', 'enquanto', 'escreva', identificador",
			"expecting: 'senao', 'fim se'",
			"expecting: 'para', 'leia', 'repita', 'se', 'avalie', 'enquanto', 'escreva', identificador, ';'",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 3, 4, 5, 5, 5, 1, 5, 6, 7, 8, 8, 8, 9, 1, 10, 11, 10, 10, 10, 10, 12, 7, 13, 14, 7, 7, 15, 6, 10, 9, 16, 17, 11, 18, 18, 18, 18, 1, 2, 7, 18, 7, 13, 13, 19, 20, 18, 16, 10, 16, 21, 21, 8, 21, 21, 20, 22, 9, 2, 2, 23, 6, 21, 18, 24, 25, 26, 18, 27, 25, 19, 19, 21, 21, 9, 21, 28, 29, 21, 21, 26, 30, 9, 25, 9, 31, 25, 29, 9, 32, 19, 25, 25, 31, 9, 33, 31, 33, 25, 25, 9, 32, 34, 31, 25, 9, 33, 9, 33, 25, 9, 25, 34, 25, 9, 25, 25, 25, 25, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
